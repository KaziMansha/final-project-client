{"ast":null,"code":"var _jsxFileName = \"/Users/kazimansha/Documents/GitHub/final-project-client/src/components/containers/NewCampusContainer.js\";\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { addCampusThunk } from '../../store/thunks';\nimport NewCampusView from '../views/NewCampusView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass NewCampusContainer extends Component {\n  // Initialize state\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault(); // Prevent browser reload/refresh after submit.\n\n      let campus = {\n        name: this.state.name,\n        address: this.state.address,\n        description: this.state.description,\n        campusId: null,\n        campusImg: this.state.campusImg\n      };\n\n      // Add new campus to back-end database\n      let newCampus = await this.props.addCampus(campus);\n\n      // Update state, and trigger redirect to show the new campus\n      this.setState({\n        name: \"\",\n        address: \"\",\n        description: \"\",\n        redirect: true,\n        redirectId: newCampus.id\n      });\n    };\n    this.state = {\n      name: \"\",\n      address: \"\",\n      description: \"\",\n      redirect: false,\n      redirectId: null\n    };\n  }\n\n  // Capture input data when it is entered\n\n  // Unmount when the component is being removed from the DOM:\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  // Render new campus input form\n  render() {\n    // Redirect to new campus' page after submit\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/campus/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this);\n    }\n\n    // Display the input form via the corresponding View component\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewCampusView, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapDispatch = dispatch => {\n  return {\n    addCampus: campus => dispatch(addCampusThunk(campus))\n  };\n};\nexport default connect(null, mapDispatch)(NewCampusContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","addCampusThunk","NewCampusView","NewCampusContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","campus","state","address","description","campusId","campusImg","newCampus","addCampus","redirect","redirectId","id","componentWillUnmount","render","mapDispatch","dispatch"],"sources":["/Users/kazimansha/Documents/GitHub/final-project-client/src/components/containers/NewCampusContainer.js"],"sourcesContent":["import Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { addCampusThunk } from '../../store/thunks';\nimport NewCampusView from '../views/NewCampusView';\n\nclass NewCampusContainer extends Component {\n  // Initialize state\n  constructor(props){\n    super(props);\n    this.state = {\n      name: \"\",\n      address: \"\",\n      description: \"\",\n      redirect: false, \n      redirectId: null\n    };\n  }\n\n  // Capture input data when it is entered\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  // Take action after user click the submit button\n  handleSubmit = async event => {\n    event.preventDefault();  // Prevent browser reload/refresh after submit.\n\n    let campus = {\n        name: this.state.name,\n        address: this.state.address,\n        description: this.state.description,\n        campusId: null,\n        campusImg: this.state.campusImg\n    };\n    \n    // Add new campus to back-end database\n    let newCampus = await this.props.addCampus(campus);\n\n    // Update state, and trigger redirect to show the new campus\n    this.setState({\n      name: \"\",\n      address: \"\",\n      description: \"\",\n      redirect: true, \n      redirectId: newCampus.id\n    });\n  }\n\n  // Unmount when the component is being removed from the DOM:\n  componentWillUnmount() {\n      this.setState({redirect: false, redirectId: null});\n  }\n\n  // Render new campus input form\n  render() {\n    // Redirect to new campus' page after submit\n    if(this.state.redirect) {\n      return (<Redirect to={`/campus/${this.state.redirectId}`}/>)\n    }\n\n    // Display the input form via the corresponding View component\n    return (\n      <div>\n        <Header />\n        <NewCampusView\n          handleChange = {this.handleChange} \n          handleSubmit={this.handleSubmit}      \n        />\n      </div>          \n    );\n  }\n}\n\nconst mapDispatch = (dispatch) => {\n    return({\n        addCampus: (campus) => dispatch(addCampusThunk(campus)),\n    })\n}\n\nexport default connect(null, mapDispatch)(NewCampusContainer);"],"mappings":";AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,SAASC,cAAc,QAAQ,oBAAoB;AACnD,OAAOC,aAAa,MAAM,wBAAwB;AAAC;AAEnD,MAAMC,kBAAkB,SAASL,SAAS,CAAC;EACzC;EACAM,WAAW,CAACC,KAAK,EAAC;IAChB,KAAK,CAACA,KAAK,CAAC;IAAC,KAWfC,YAAY,GAAGC,KAAK,IAAI;MACtB,IAAI,CAACC,QAAQ,CAAC;QACZ,CAACD,KAAK,CAACE,MAAM,CAACC,IAAI,GAAGH,KAAK,CAACE,MAAM,CAACE;MACpC,CAAC,CAAC;IACJ,CAAC;IAAA,KAGDC,YAAY,GAAG,MAAML,KAAK,IAAI;MAC5BA,KAAK,CAACM,cAAc,EAAE,CAAC,CAAE;;MAEzB,IAAIC,MAAM,GAAG;QACTJ,IAAI,EAAE,IAAI,CAACK,KAAK,CAACL,IAAI;QACrBM,OAAO,EAAE,IAAI,CAACD,KAAK,CAACC,OAAO;QAC3BC,WAAW,EAAE,IAAI,CAACF,KAAK,CAACE,WAAW;QACnCC,QAAQ,EAAE,IAAI;QACdC,SAAS,EAAE,IAAI,CAACJ,KAAK,CAACI;MAC1B,CAAC;;MAED;MACA,IAAIC,SAAS,GAAG,MAAM,IAAI,CAACf,KAAK,CAACgB,SAAS,CAACP,MAAM,CAAC;;MAElD;MACA,IAAI,CAACN,QAAQ,CAAC;QACZE,IAAI,EAAE,EAAE;QACRM,OAAO,EAAE,EAAE;QACXC,WAAW,EAAE,EAAE;QACfK,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAEH,SAAS,CAACI;MACxB,CAAC,CAAC;IACJ,CAAC;IAvCC,IAAI,CAACT,KAAK,GAAG;MACXL,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,EAAE;MACfK,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE;IACd,CAAC;EACH;;EAEA;;EAgCA;EACAE,oBAAoB,GAAG;IACnB,IAAI,CAACjB,QAAQ,CAAC;MAACc,QAAQ,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAI,CAAC,CAAC;EACtD;;EAEA;EACAG,MAAM,GAAG;IACP;IACA,IAAG,IAAI,CAACX,KAAK,CAACO,QAAQ,EAAE;MACtB,oBAAQ,QAAC,QAAQ;QAAC,EAAE,EAAG,WAAU,IAAI,CAACP,KAAK,CAACQ,UAAW;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE;IAC7D;;IAEA;IACA,oBACE;MAAA,wBACE,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV,QAAC,aAAa;QACZ,YAAY,EAAI,IAAI,CAACjB,YAAa;QAClC,YAAY,EAAE,IAAI,CAACM;MAAa;QAAA;QAAA;QAAA;MAAA,QAChC;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAEV;AACF;AAEA,MAAMe,WAAW,GAAIC,QAAQ,IAAK;EAC9B,OAAO;IACHP,SAAS,EAAGP,MAAM,IAAKc,QAAQ,CAAC3B,cAAc,CAACa,MAAM,CAAC;EAC1D,CAAC;AACL,CAAC;AAED,eAAef,OAAO,CAAC,IAAI,EAAE4B,WAAW,CAAC,CAACxB,kBAAkB,CAAC"},"metadata":{},"sourceType":"module"}