{"ast":null,"code":"var _jsxFileName = \"/Users/kazimansha/Documents/GitHub/final-project-client/src/components/containers/EditStudentContainer.js\";\nimport Header from './Header';\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport EditStudentView from '../views/EditStudentView';\nimport { Redirect } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { editStudentThunk, fetchStudentThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EditStudentContainer extends Component {\n  componentDidMount() {\n    this.props.fetchStudent(this.props.match.params.id);\n  }\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault(); // Prevent browser reload/refresh after submit.\n      let {\n        student\n      } = this.props;\n      student = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        campusId: this.state.campusId,\n        id: student.id\n      };\n\n      // Edit student\n      await this.props.editStudent(student);\n      this.setState({\n        redirect: true\n      });\n    };\n    this.state = {\n      redirect: false\n    };\n  }\n  //the student id is undefined\n  // Capture input data when it is entered\n\n  // Render Student view by passing student data as props to the corresponding View component\n  render() {\n    const {\n      student\n    } = this.props;\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/students`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditStudentView, {\n        campusId: this.props.location.query,\n        student: student,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n// The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\nconst mapState = state => {\n  return {\n    student: state.student // Get the State object from Reducer \"student\"\n  };\n};\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id)),\n    editStudent: student => dispatch(editStudentThunk(student))\n  };\n};\nexport default connect(mapState, mapDispatch)(EditStudentContainer);","map":{"version":3,"names":["Header","React","Component","connect","EditStudentView","Redirect","useEffect","editStudentThunk","fetchStudentThunk","EditStudentContainer","componentDidMount","props","fetchStudent","match","params","id","constructor","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","student","firstname","state","lastname","campusId","editStudent","redirect","render","location","query","mapState","mapDispatch","dispatch"],"sources":["/Users/kazimansha/Documents/GitHub/final-project-client/src/components/containers/EditStudentContainer.js"],"sourcesContent":["import Header from './Header';\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport EditStudentView from '../views/EditStudentView';\nimport { Redirect } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { editStudentThunk, fetchStudentThunk } from '../../store/thunks';\n\nclass EditStudentContainer extends Component {\n    componentDidMount() {\n        this.props.fetchStudent(this.props.match.params.id);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false\n        };\n    }\n    //the student id is undefined\n    // Capture input data when it is entered\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    // Take action after user click the submit button\n    handleSubmit = async event => {\n        event.preventDefault();  // Prevent browser reload/refresh after submit.\n        let { student } = this.props;\n\n        student = {\n            firstname: this.state.firstname,\n            lastname: this.state.lastname,\n            campusId: this.state.campusId,\n            id: student.id\n        };\n\n        // Edit student\n        await this.props.editStudent(student);\n        this.setState({\n            redirect: true\n        });\n    }\n\n    // Render Student view by passing student data as props to the corresponding View component\n    render() {\n        const { student } = this.props;\n\n        if (this.state.redirect) {\n            return (<Redirect to={`/students`} />)\n        }\n\n        return (\n            <div>\n                <Header />\n                <EditStudentView campusId = {this.props.location.query} student={student} handleChange={this.handleChange} handleSubmit={this.handleSubmit} />\n            </div>\n        );\n    }\n}\n\n// The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\nconst mapState = (state) => {\n    return {\n        student: state.student,  // Get the State object from Reducer \"student\"\n    };\n};\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = (dispatch) => {\n    return {\n        fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n        editStudent: (student) => dispatch(editStudentThunk(student))\n    };\n};\n\nexport default connect(mapState, mapDispatch)(EditStudentContainer) "],"mappings":";AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,eAAe,MAAM,0BAA0B;AACtD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,gBAAgB,EAAEC,iBAAiB,QAAQ,oBAAoB;AAAC;AAEzE,MAAMC,oBAAoB,SAASP,SAAS,CAAC;EACzCQ,iBAAiB,GAAG;IAChB,IAAI,CAACC,KAAK,CAACC,YAAY,CAAC,IAAI,CAACD,KAAK,CAACE,KAAK,CAACC,MAAM,CAACC,EAAE,CAAC;EACvD;EAEAC,WAAW,CAACL,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAOjBM,YAAY,GAAGC,KAAK,IAAI;MACpB,IAAI,CAACC,QAAQ,CAAC;QACV,CAACD,KAAK,CAACE,MAAM,CAACC,IAAI,GAAGH,KAAK,CAACE,MAAM,CAACE;MACtC,CAAC,CAAC;IACN,CAAC;IAAA,KAGDC,YAAY,GAAG,MAAML,KAAK,IAAI;MAC1BA,KAAK,CAACM,cAAc,EAAE,CAAC,CAAE;MACzB,IAAI;QAAEC;MAAQ,CAAC,GAAG,IAAI,CAACd,KAAK;MAE5Bc,OAAO,GAAG;QACNC,SAAS,EAAE,IAAI,CAACC,KAAK,CAACD,SAAS;QAC/BE,QAAQ,EAAE,IAAI,CAACD,KAAK,CAACC,QAAQ;QAC7BC,QAAQ,EAAE,IAAI,CAACF,KAAK,CAACE,QAAQ;QAC7Bd,EAAE,EAAEU,OAAO,CAACV;MAChB,CAAC;;MAED;MACA,MAAM,IAAI,CAACJ,KAAK,CAACmB,WAAW,CAACL,OAAO,CAAC;MACrC,IAAI,CAACN,QAAQ,CAAC;QACVY,QAAQ,EAAE;MACd,CAAC,CAAC;IACN,CAAC;IA7BG,IAAI,CAACJ,KAAK,GAAG;MACTI,QAAQ,EAAE;IACd,CAAC;EACL;EACA;EACA;;EA0BA;EACAC,MAAM,GAAG;IACL,MAAM;MAAEP;IAAQ,CAAC,GAAG,IAAI,CAACd,KAAK;IAE9B,IAAI,IAAI,CAACgB,KAAK,CAACI,QAAQ,EAAE;MACrB,oBAAQ,QAAC,QAAQ;QAAC,EAAE,EAAG;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG;IACzC;IAEA,oBACI;MAAA,wBACI,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV,QAAC,eAAe;QAAC,QAAQ,EAAI,IAAI,CAACpB,KAAK,CAACsB,QAAQ,CAACC,KAAM;QAAC,OAAO,EAAET,OAAQ;QAAC,YAAY,EAAE,IAAI,CAACR,YAAa;QAAC,YAAY,EAAE,IAAI,CAACM;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5I;EAEd;AACJ;;AAEA;AACA;AACA,MAAMY,QAAQ,GAAIR,KAAK,IAAK;EACxB,OAAO;IACHF,OAAO,EAAEE,KAAK,CAACF,OAAO,CAAG;EAC7B,CAAC;AACL,CAAC;AACD;AACA;AACA,MAAMW,WAAW,GAAIC,QAAQ,IAAK;EAC9B,OAAO;IACHzB,YAAY,EAAGG,EAAE,IAAKsB,QAAQ,CAAC7B,iBAAiB,CAACO,EAAE,CAAC,CAAC;IACrDe,WAAW,EAAGL,OAAO,IAAKY,QAAQ,CAAC9B,gBAAgB,CAACkB,OAAO,CAAC;EAChE,CAAC;AACL,CAAC;AAED,eAAetB,OAAO,CAACgC,QAAQ,EAAEC,WAAW,CAAC,CAAC3B,oBAAoB,CAAC"},"metadata":{},"sourceType":"module"}